== Statements.do-while == map:sd, sc:d ==
do {
} while (<CURSOR>);
== Statements.for == map:sf, sc:f ==
for ( my $<CURSOR>; ;  ) {
}
== Statements.foreach == map:sfe, sc:f ==
foreach my $<CURSOR> (  ) {
}
== Statements.if == map:sif, sc:if ==
if (<CURSOR>) {
}
== Statements.else == map:se, sc:e ==
else {<CURSOR>
}
== Statements.elsif == map:sei, sc:e ==
elsif (<CURSOR>) {
}
== Statements.if-else == map:sie, sc:i ==
if (<CURSOR>) {
} else {
}
== Statements.unless == map:su, sc:u ==
unless (<CURSOR>) {
}
== Statements.unless-else == map:sue, sc:u ==
unless (<CURSOR>) {
} else {
}
== Statements.until == map:st, sc:t ==
until (<CURSOR>) {
}
== Statements.while == map:swi, sc:wi ==
while (<CURSOR>) {
}
== Statements.given == map:sg, sc:g ==
given (<CURSOR>) {
	when () {}
	when () {}
	default {}
}
== Statements.when == map:swh, sc:w ==
	when (<CURSOR>) {}
== ENDTEMPLATE ==
